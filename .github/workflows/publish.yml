name: Publish

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest

    container:
      image: tktechdocker/manylinux:gcc8.3.0

    steps:
    - uses: actions/checkout@v1

    - name: install build essentials
      run: |
        yum -y install poco-devel*

        ln -f -s /usr/local/gcc-8.3.0/bin/g++-8.3.0 /usr/bin/g++-8
        ln -f -s /opt/python/cp36-cp36m/bin/python /usr/bin/python3.6
        python3.6 -m pip install cmake --user
        ln -f -s $HOME/.local/bin/cmake /usr/bin/cmake

    - name: install Eigen3
      run: |
        echo $PATH
        git clone https://github.com/eigenteam/eigen-git-mirror.git
        cd eigen-git-mirror
        git checkout 3.3.7
        mkdir build && cd build
        cmake ..
        make install

    - name: install Reflexxes
      run: |
        git clone https://github.com/pantor/RMLTypeII.git
        cd RMLTypeII
        mkdir build && cd build
        cmake ..
        make

    - name: install libfranka
      run: |
        git clone --recursive https://github.com/frankaemika/libfranka.git
        cd libfranka
        git checkout 0.6.0
        git submodule update
        mkdir build && cd build
        cmake -DCMAKE_CXX_COMPILER=g++-8 -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF ..
        make
        make install

    - name: install pybind11
      run: |
        git clone https://github.com/pybind/pybind11.git
        cd pybind11
        git checkout v2.4.3
        mkdir build && cd build
        cmake -DPYBIND11_PYTHON_VERSION=3.6 -DPython_USE_STATIC_LIBS=TRUE -DCMAKE_CXX_COMPILER=g++-8 -DPYBIND11_TEST=OFF ..
        make
        make install

    - name: install Catch2
      run: |
        git clone https://github.com/catchorg/Catch2.git
        cd Catch2
        git checkout v2.5.0
        mkdir build && cd build
        cmake -DCATCH_BUILD_TESTING=OFF -DCATCH_ENABLE_WERROR=OFF -DCATCH_INSTALL_DOCS=OFF -DCATCH_INSTALL_HELPERS=OFF ..
        make install

    - name: python package
      run: |
        # Compile wheels
        for PYBIN in /opt/python/*/bin; do
          "${PYBIN}/pip" wheel /io/ -w wheelhouse/
        done

        # Bundle external shared libraries into the wheels
        for whl in wheelhouse/*.whl; do
          auditwheel repair "$whl" -w /io/wheelhouse/
        done

        # Install packages and test
        for PYBIN in /opt/python/*/bin/; do
          "${PYBIN}/pip" install nestpy --no-index -f /io/wheelhouse
          # (cd "$HOME"; "${PYBIN}/nosetests" -w /io/tests)
        done

        # python3.6 -m pip install setuptools wheel --user
        # python3.6 setup.py sdist bdist_wheel

    # - name: publish python package
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     user: keNB2
    #     password: ${{ secrets.pypi_password }}

name: Publish

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest

    container:
      image: quay.io/pypa/manylinux2010_x86_64

    steps:
    - uses: actions/checkout@v1

    - name: install build essentials
      run: |
        yum -y install poco-devel*

        ln -f -s /opt/python/cp36-cp36m/bin/python /usr/bin/python3.6
        ln -f -s /opt/python/cp37-cp37m/bin/python /usr/bin/python3.7
        /opt/python/cp36-cp36m/bin/pip install cmake --user
        ln -f -s $HOME/.local/bin/cmake /usr/bin/cmake

    - name: install Eigen3
      run: |
        echo $PATH
        git clone https://github.com/eigenteam/eigen-git-mirror.git
        cd eigen-git-mirror
        git checkout 3.3.7
        mkdir build && cd build
        cmake ..
        make install

    - name: install Reflexxes
      run: |
        git clone https://github.com/pantor/RMLTypeII.git
        cd RMLTypeII
        mkdir build && cd build
        cmake ..
        make
        make install

    - name: install libfranka
      run: |
        git clone --recursive https://github.com/frankaemika/libfranka.git
        cd libfranka
        git checkout 0.6.0
        git submodule update
        mkdir build && cd build
        cmake -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF ..
        make
        make install

    - name: install pybind11
      run: |
        git clone https://github.com/pybind/pybind11.git
        cd pybind11
        git checkout v2.4.3
        # mkdir build && cd build
        # cmake -DPYBIND11_PYTHON_VERSION=3.6 -DPYBIND11_TEST=OFF ..
        # make
        # make install

    - name: install Catch2
      run: |
        git clone https://github.com/catchorg/Catch2.git
        cd Catch2
        git checkout v2.5.0
        mkdir build && cd build
        cmake -DCATCH_BUILD_TESTING=OFF -DCATCH_ENABLE_WERROR=OFF -DCATCH_INSTALL_DOCS=OFF -DCATCH_INSTALL_HELPERS=OFF ..
        make install

    - name: python package
      run: |
        mkdir -p wheels
        mkdir -p dist

        # Compile wheels
        for PYBIN in /opt/python/*/bin; do
          if [[ "${PYBIN}" == *"cp36"* ]] || [[ "${PYBIN}" == *"cp37"* ]] || [[ "${PYBIN}" == *"cp38"* ]]; then
            ls ${PYBIN}/../lib
            export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${PYBIN}/../lib
            "${PYBIN}/pip" install setuptools wheel --user
            "${PYBIN}/pip" wheel . -w wheels/
          fi
        done

        # Bundle external shared libraries into the wheels
        for whl in wheels/*.whl; do
          auditwheel repair "$whl" -w dist/
        done

        # Install packages and test
        for PYBIN in /opt/python/*/bin/; do
          if [[ "${PYBIN}" == *"cp36"* ]] || [[ "${PYBIN}" == *"cp37"* ]] || [[ "${PYBIN}" == *"cp38"* ]]; then
            "${PYBIN}/pip" install frankx --no-index -f dist
            # (cd "$HOME"; "${PYBIN}/nosetests" -w /io/tests)
          fi
        done

        ls dist

    - name: publish python package
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: keNB2
        password: ${{ secrets.pypi_password }}
